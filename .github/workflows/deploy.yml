name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP_NAME: "green-fork-rg"
  AKS_CLUSTER_NAME: "green-fork-aks-cluster"
  # ACR_NAME is stored as a secret

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR Login
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build and Push Docker Images
        run: |
            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/adservice:latest ./src/adservice
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/adservice:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/cartservice:latest ./src/cartservice/src
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/cartservice:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/checkoutservice:latest ./src/checkoutservice
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/checkoutservice:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/currencyservice:latest ./src/currencyservice
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/currencyservice:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/emailservice:latest ./src/emailservice
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/emailservice:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest ./src/frontend
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/loadgenerator:latest ./src/loadgenerator
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/loadgenerator:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/paymentservice:latest ./src/paymentservice
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/paymentservice:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/productcatalogservice:latest ./src/productcatalogservice
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/productcatalogservice:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/recommendationservice:latest ./src/recommendationservice
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/recommendationservice:latest

            docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/shippingservice:latest ./src/shippingservice
            docker push ${{ secrets.ACR_NAME }}.azurecr.io/shippingservice:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP_NAME }} --name ${{ env.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Deploy to AKS
        run: |
          sed -i 's|gcr.io/google-samples/microservices-demo|${{ secrets.ACR_NAME }}.azurecr.io|g' ./kubernetes-manifests/kubernetes-manifests.yaml
          kubectl apply -f ./kubernetes-manifests/kubernetes-manifests.yaml